import { createClient } from '@supabase/supabase-js';

// Configura√ß√£o do Supabase
const SUPABASE_URL = "https://ujawcfzhgbgwwcafoaeh.supabase.co";
const SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVqYXdjZnpoZ2Jnd3djYWZvYWVoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEyNTM1MDMsImV4cCI6MjA2NjgyOTUwM30.9kVO6CTVVLLpQpXOokBccL_rIDFVBA5-AcycN5oOw0o";

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

console.log('üîç VERIFICANDO PROBLEMAS DE RLS');
console.log('================================\n');

async function checkRLSIssues() {
  try {
    console.log('1. Verificando se as pol√≠ticas RLS est√£o ativas...');
    
    // Tentar acessar profiles sem autentica√ß√£o
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      .limit(1);
    
    if (profilesError) {
      console.log('‚úÖ Pol√≠tica RLS est√° funcionando (acesso negado sem auth)');
      console.log('   Erro:', profilesError.message);
    } else {
      console.log('‚ùå ALERTA: Pol√≠tica RLS n√£o est√° funcionando!');
      console.log('   Dados acess√≠veis sem autentica√ß√£o');
    }

    console.log('\n2. Verificando se as fun√ß√µes de RLS existem...');
    
    // Testar fun√ß√£o is_admin
    const { data: isAdminResult, error: isAdminError } = await supabase
      .rpc('is_admin');
    
    if (isAdminError) {
      console.log('‚ùå Fun√ß√£o is_admin n√£o existe ou n√£o est√° acess√≠vel');
      console.log('   Erro:', isAdminError.message);
    } else {
      console.log('‚úÖ Fun√ß√£o is_admin est√° dispon√≠vel');
    }

    // Testar fun√ß√£o is_seller
    const { data: isSellerResult, error: isSellerError } = await supabase
      .rpc('is_seller');
    
    if (isSellerError) {
      console.log('‚ùå Fun√ß√£o is_seller n√£o existe ou n√£o est√° acess√≠vel');
      console.log('   Erro:', isSellerError.message);
    } else {
      console.log('‚úÖ Fun√ß√£o is_seller est√° dispon√≠vel');
    }

    console.log('\n3. Verificando se h√° usu√°rios no sistema...');
    
    // Tentar login com credenciais padr√£o
    const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
      email: 'admin@roupacerta.com',
      password: '123456'
    });

    if (authError) {
      console.log('‚ùå Erro no login:', authError.message);
      console.log('‚ÑπÔ∏è Execute o script create-admin-user.js primeiro');
    } else {
      console.log('‚úÖ Login bem-sucedido');
      console.log(`üë§ Usu√°rio: ${authData.user.email}`);
      
      // Testar acesso a dados como usu√°rio autenticado
      console.log('\n4. Testando acesso a dados como usu√°rio autenticado...');
      
      const { data: userProfiles, error: userProfilesError } = await supabase
        .from('profiles')
        .select('*')
        .limit(5);
      
      if (userProfilesError) {
        console.log('‚ùå Erro ao acessar profiles:', userProfilesError.message);
      } else {
        console.log(`‚úÖ Pode acessar ${userProfiles.length} profiles`);
      }

      // Testar acesso a produtos
      const { data: userProducts, error: userProductsError } = await supabase
        .from('products')
        .select('*')
        .limit(5);
      
      if (userProductsError) {
        console.log('‚ùå Erro ao acessar produtos:', userProductsError.message);
      } else {
        console.log(`‚úÖ Pode acessar ${userProducts.length} produtos`);
      }

      // Logout
      await supabase.auth.signOut();
      console.log('‚úÖ Logout realizado');
    }

    console.log('\nüìã DIAGN√ìSTICO:');
    console.log('   - Se as pol√≠ticas RLS est√£o muito restritivas, pode estar bloqueando acesso leg√≠timo');
    console.log('   - Verifique se as fun√ß√µes is_admin e is_seller foram criadas corretamente');
    console.log('   - Confirme se h√° usu√°rios v√°lidos no sistema');
    console.log('   - Teste com diferentes tipos de usu√°rio (admin, vendedor)');

  } catch (error) {
    console.error('‚ùå Erro durante a verifica√ß√£o:', error);
  }
}

// Executar verifica√ß√£o
checkRLSIssues(); 